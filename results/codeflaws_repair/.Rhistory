xlab("") + ylab("Number of validation tests") +
scale_fill_grey(start = 0.6, end = .9) +
theme(legend.position="none", legend.title= element_blank(),
axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
ggsave(filename = "validation.pdf", width=3,height=4.2,scale=0.77)
print(paste("Average number of passing tests: ", mean(subset(validation, variable=="Passing Tests")$number)))
print(paste("Average number of failing tests: ", mean(subset(validation, variable=="Failing Tests")$number)))
ggplot(validation2, aes(variable, number)) +
geom_boxplot(aes(fill=variable)) +
scale_y_continuous(labels = scales::percent) +
facet_grid(~ category) +
xlab("") + ylab("Proportion of failing validation tests") +
scale_fill_grey(start = 0.6, end = .9) +
theme(legend.position="none", legend.title= element_blank(),
axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black"))
ggsave(filename = "validation2.pdf", width=2.2,height=4.2,scale=0.77)
human_effort = data.frame("subject"=character(), "max_label"=character(),
"variable"=character(),  "value" = numeric())
human_effort2 = data.frame("subject"=character(), "max_label"=character(),
"variable"=character(),  "value" = numeric())
human_effort3 = data.frame("subject"=character(), "max_label"=character(),
"variable"=character(),  "value" = numeric())
d = read.table("results_all.csv",sep=",",comment.char = "#")
mean_data = compute_mean(d, "results20")
for (Subject in levels(factor(mean_data$subject))){
specific = subset(mean_data, subject == Subject)
human_effort <- rbind (human_effort, data.frame(subject = Subject, max_label="20",
variable = "Prob. to generate a failing test",
value = specific$totalfail / specific$totalgen))
human_effort <- rbind (human_effort, data.frame(subject = Subject, max_label="20",
variable = "Prob. to label a failing test",
value = specific$labelfail / specific$labelgen))
human_effort2 <- rbind (human_effort2, data.frame(subject = Subject, max_label="20",
variable = "%Generated tests that are labeled",
value = specific$labelgen/specific$totalgen))
human_effort2 <- rbind (human_effort2, data.frame(subject = Subject, max_label="20",
variable = "%Failing tests that are labeled",
value = specific$labelfail/ specific$totalfail))
human_effort3 <- rbind (human_effort3, data.frame(subject = Subject, max_label="20",
variable = "Improved",
value = (specific$labelfail / specific$labelgen) / (specific$totalfail / specific$totalgen)))
}
print(paste("Average/Median %Generated tests that are labeled (-l 20): ", mean(subset(human_effort2, max_label=="20" & variable == "%Generated tests that are labeled")$value),median(subset(human_effort2, max_label=="20" & variable == "%Generated tests that are labeled")$value)))
print(paste("Average/Median %Failing tests that are labeled (-l 20): ", mean(subset(human_effort2, max_label=="20" & variable == "%Failing tests that are labeled")$value, na.rm=TRUE),median(subset(human_effort2, max_label=="20" & variable == "%Failing tests that are labeled")$value, na.rm=TRUE)))
print(paste("Average/Median Improved (-l 20): ", mean(subset(human_effort3, max_label=="20")$value, na.rm=TRUE), median(subset(human_effort3, max_label=="20")$value, na.rm=TRUE)))
print(paste("Average/Median Prob. to generate a failing test (-l 20): ", mean(subset(human_effort, max_label=="20" & variable == "Prob. to generate a failing test")$value),median(subset(human_effort, max_label=="20" & variable == "Prob. to generate a failing test")$value)))
print(paste("Average/Median Prob. to label a failing test (-l 20): ", mean(subset(human_effort, max_label=="20" & variable == "Prob. to label a failing test")$value),median(subset(human_effort, max_label=="20" & variable == "Prob. to label a failing test")$value)))
ggplot(human_effort, aes(max_label, value)) +
geom_boxplot(aes(fill=max_label)) +
scale_y_continuous(labels = scales::percent) +
facet_grid(~ variable) +
xlab("Max. Labeling Effort l") + ylab("Probability") +
theme(legend.position="none", legend.title= element_blank(),
axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
scale_fill_grey(start = 0.6, end = .9)
ggsave(filename = "effort2.pdf",height=5.2,scale=0.5)
ggplot(human_effort2, aes(max_label, value)) +
geom_boxplot(aes(fill=max_label)) +
#scale_y_log10(limits=c(10,10000)) +
#scale_y_log10(labels = scales::percent) +
scale_y_continuous(labels = scales::percent) +
facet_grid(~ variable) +
xlab("Max. Labeling Effort l") + ylab("Proportion") +
theme(legend.position="none", legend.title= element_blank(),
axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
scale_fill_grey(start = 0.6, end = .9)
ggsave(filename = "effort1.pdf",height=5.2,scale=0.5)
ggplot(human_effort3, aes(max_label, value)) +
geom_boxplot(aes(fill=max_label)) +
scale_y_log10() +
facet_grid(~ variable) +
xlab("Max. Labeling Effort l") + ylab("Times more likely than by random labeling") +
theme(legend.position="none", legend.title= element_blank(),
axis.text.x = element_text(colour = "black"), axis.text.y = element_text(colour = "black")) +
scale_fill_grey(start = 0.6, end = .9)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
setwd("~/grammar2fix_results/codeflaws_repair")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
setwd("~/grammar2fix_results/codeflaws_repair")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
setwd("~/grammar2fix_results/codeflaws_repair")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
View(patch_quality)
setwd("~/grammar2fix_results/codeflaws_repair")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
setwd("~/grammar2fix_results/codeflaws_repair")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median repairabiilty manual: ",mean(subset(patch_quality,variable=="Manual")$value,na.rm=TRUE),median(subset(patch_quality,variable=="Manual")$value,na.rm=TRUE)))
print(paste("Average/Median repairabiilty autogen: ",mean(subset(patch_quality,variable=="Autogen")$value,na.rm=TRUE),median(subset(patch_quality,variable=="Autogen")$value,na.rm=TRUE)))
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
theme_set(theme_bw())
#Patch Quality
patch_quality=data.frame("subject"=character(),"category"=character(),"variable"=character(),"value"=numeric())
d=read.table("results_codeflaws.csv",sep=",",comment.char ="#")
mean_data=compute_mean(d,"Results_repair")
if(length(levels(factor(mean_data$subject)))!=length(levels(factor(d$V1))))
{
print("DELETE Results_repair.Rda")
knit_exit()
}
#Repairability
for(i in 1:32){
m_repair=0
a_repair=0
for(Subject in levels(factor(d$V1)))
{
specific=subset(d,V1==Subject & V2==i)
if ("REPAIR" %in% specific$V11) m_repair=m_repair+1
if ("REPAIR" %in% specific$V17) a_repair=a_repair+1
}
n_subjects=length(levels(factor(d$V1)))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Manual",value=m_repair/n_subjects))
patch_quality <- rbind(patch_quality,data.frame(subject=Subject,category="Repairability",variable="Autogen",value=a_repair/n_subjects))
}
d_manual=subset(d,V11=="REPAIR")
d_autogen=subset(d,V17=="REPAIR")
patch_quality_1=data.frame(subject=d_manual$V1,
category=rep("Validation Score",nrow(d_manual)),
variable=rep("Manual",nrow(d_manual)),
value=d_manual$V13/d_manual$V14)
patch_quality_1=rbind(patch_quality_1,
data.frame(subject=d_autogen$V1,
category=rep("Validation Score",nrow(d_autogen)),
variable=rep("Autogen",nrow(d_autogen)),
value=d_autogen$V19/d_autogen$V20))
patch_quality_1$variable<-factor(patch_quality_1$variable,levels=c("Manual","Autogen"),ordered=TRUE)
ggplot(patch_quality,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Subjects Repaired")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "Repairbility_violin.pdf",scale = 0.45,height=6)
ggplot(patch_quality_1,aes(variable,value))+
geom_violin(aes(fill=variable),scale="width")+
geom_boxplot(width=0.1,outlier.shape = NA)+
scale_y_continuous(labels = scales::percent,limits =c(0,1))+
facet_grid(~ category)+
xlab("Test suite")+ylab("%Heldout test cases passed")+
scale_fill_grey(start = 0.6,end=0.9)+
theme(legend.position = "none", legend.title = element_blank(),
axis.text.x = element_text(colour = "black"),axis.text.y = element_text(colour = "black"))
ggsave(filename = "patch_quality_individual_violin.pdf",scale = 0.45,height=6)
print(paste("Average/Median repairabiilty manual: ",mean(subset(patch_quality,variable=="Manual")$value,na.rm=TRUE),median(subset(patch_quality,variable=="Manual")$value,na.rm=TRUE)))
print(paste("Average/Median repairabiilty autogen: ",mean(subset(patch_quality,variable=="Autogen")$value,na.rm=TRUE),median(subset(patch_quality,variable=="Autogen")$value,na.rm=TRUE)))
print(paste("Average/Median Passing manual validation score: ", mean(subset(patch_quality_1, variable == "Manual")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Manual")$value,na.rm =TRUE)))
print(paste("Average/Median Passing autogen validation score: ", mean(subset(patch_quality_1, variable == "Autogen")$value,na.rm =TRUE),median(subset(patch_quality_1,variable == "Autogen")$value,na.rm =TRUE)))
